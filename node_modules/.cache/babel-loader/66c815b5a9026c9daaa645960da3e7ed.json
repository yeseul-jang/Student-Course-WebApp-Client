{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/Student-Course-WebApp-Client/src/components/ShowCourse.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\n\nfunction ShowCourse(props) {\n  const [data, setData] = useState({});\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/api/courses/\" + props.match.params.id;\n  const apiStudentListUrl = \"http://localhost:3000/api/studentListByCourse/\" + props.match.params.id;\n  const [studentData, setStudentData] = useState([]);\n  useEffect(() => {\n    setShowLoading(false);\n\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      console.log('results from courses', result.data);\n      setData(result.data);\n      const resultStudentList = await axios(apiStudentListUrl);\n      console.log('results from studentList', resultStudentList.data);\n      setStudentData(resultStudentList.data);\n      setShowLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const editCourse = id => {\n    props.history.push({\n      pathname: '/editCourse/' + id\n    });\n  };\n\n  const deleteCourse = id => {\n    setShowLoading(true);\n    const course = {\n      courseCode: data.courseCode,\n      courseName: data.courseName,\n      section: data.section,\n      semester: data.semester,\n      studentNumber: data.studentNumber\n    };\n    axios.delete(apiUrl, course).then(result => {\n      setShowLoading(false);\n      props.history.push('/listCourses');\n    }).catch(error => setShowLoading(false));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Loading...\")), React.createElement(Jumbotron, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Course Name: \", data.courseName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Course Code: \", data.courseCode), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Section: \", data.section), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Semester: \", data.semester), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"button\",\n    variant: \"primary\",\n    onClick: () => {\n      editCourse(data._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Edit\"), \"\\xA0\", React.createElement(Button, {\n    type: \"button\",\n    variant: \"danger\",\n    onClick: () => {\n      deleteCourse(data._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Delete\"))), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"List of Students\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Table, {\n    responsive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Student Number\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Program\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, studentData.map((item, idx) => React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, item.studentNumber), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, item.fullName), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, item.program))))));\n}\n\nexport default withRouter(ShowCourse);","map":{"version":3,"sources":["/Users/kyungjin/Student-Course-WebApp-Client/src/components/ShowCourse.js"],"names":["React","useState","useEffect","axios","Spinner","Jumbotron","Button","withRouter","Table","ShowCourse","props","data","setData","showLoading","setShowLoading","apiUrl","match","params","id","apiStudentListUrl","studentData","setStudentData","fetchData","result","console","log","resultStudentList","editCourse","history","push","pathname","deleteCourse","course","courseCode","courseName","section","semester","studentNumber","delete","then","catch","error","_id","map","item","idx","fullName","program"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\n\nfunction ShowCourse(props) {\n  const [data, setData] = useState({});\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/api/courses/\" + props.match.params.id;\n  const apiStudentListUrl = \"http://localhost:3000/api/studentListByCourse/\" + props.match.params.id;\n  const [studentData, setStudentData] = useState([]);\n\n  useEffect(() => {\n    setShowLoading(false);\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      console.log('results from courses', result.data);\n      setData(result.data);\n\n      const resultStudentList = await axios(apiStudentListUrl);\n      console.log('results from studentList', resultStudentList.data);\n      setStudentData(resultStudentList.data);\n\n      setShowLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const editCourse = (id) => {\n    props.history.push({\n      pathname: '/editCourse/' + id\n    });\n\n  };\n\n  const deleteCourse = (id) => {\n    setShowLoading(true);\n    const course = {\n      courseCode: data.courseCode,\n      courseName: data.courseName,\n      section: data.section,\n      semester: data.semester,\n      studentNumber: data.studentNumber\n    };\n    axios.delete(apiUrl, course)\n      .then((result) => {\n        setShowLoading(false);\n        props.history.push('/listCourses')\n      }).catch((error) => setShowLoading(false));\n  };\n\n  return (\n    <div>\n      {showLoading && <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>}\n      <Jumbotron>\n        <h1>Course Name: {data.courseName}</h1>\n        <p>Course Code: {data.courseCode}</p>\n        <p>Section: {data.section}</p>\n        <p>Semester: {data.semester}</p>\n\n        <p>\n          <Button type=\"button\" variant=\"primary\" onClick={() => { editCourse(data._id) }}>Edit</Button>&nbsp;\n          <Button type=\"button\" variant=\"danger\" onClick={() => { deleteCourse(data._id) }}>Delete</Button>\n        </p>\n      </Jumbotron>\n\n\n      <h2>List of Students</h2><br />\n\n      <Table responsive>\n        <thead>\n          <tr>\n            <th scope=\"col\">Student Number</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Program</th>\n          </tr>\n        </thead>\n        <tbody>\n          {studentData.map((item, idx) => (\n            <tr>\n              <td>{item.studentNumber}</td>\n              <td>{item.fullName}</td>\n              <td>{item.program}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default withRouter(ShowCourse);\n"]},"metadata":{},"sourceType":"module"}