{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/Student-Course-WebApp-Client/src/components/CreateCourse.js\";\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\nimport React, { useState } from 'react'; //\n\nfunction CreateCourse(props) {\n  //\n  const studentNumber = props.screen;\n  console.log('props.screen', props.screen);\n  const [course, setCourse] = useState({\n    _id: '',\n    courseCode: '',\n    courseName: '',\n    section: '',\n    semester: '',\n    studentNumber: ''\n  });\n  const [showLoading, setShowLoading] = useState(false); //\n\n  const apiUrl = \"http://localhost:3000/api/courses\"; //\n\n  const [validated, setValidated] = useState(false); //\n\n  const saveCourse = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      courseCode: course.courseCode,\n      courseName: course.courseName,\n      section: course.section,\n      semester: course.semester,\n      studentNumber: studentNumber\n    }; //\n\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidated(true);\n    axios.post(apiUrl, data).then(result => {\n      setShowLoading(false);\n      console.log('results from save course:', result.data);\n      props.history.push('/showCourse/' + result.data._id);\n    }).catch(error => setShowLoading(false));\n  }; //\n\n\n  const onChange = e => {\n    e.persist();\n    setCourse({ ...course,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" Create an course for \", studentNumber, \" \"), showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Loading...\")), React.createElement(Jumbotron, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: saveCourse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \" Course Code\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"courseCode\",\n    id: \"courseCode\",\n    placeholder: \"Enter Course Code\",\n    value: course.courseCode,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Please provide correct course code.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" Course Name\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"courseName\",\n    id: \"courseName\",\n    placeholder: \"Enter Course Name\",\n    value: course.courseName,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Please provide course name.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \" Section\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"section\",\n    id: \"section\",\n    placeholder: \"Enter section\",\n    value: course.section,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Please provide section.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \" Semester\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"semester\",\n    id: \"semester\",\n    placeholder: \"Enter semester\",\n    value: course.semester,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Please provide semester.\")), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Save Course\"))));\n}\n\nexport default withRouter(CreateCourse);","map":{"version":3,"sources":["/Users/kyungjin/Student-Course-WebApp-Client/src/components/CreateCourse.js"],"names":["axios","Spinner","Jumbotron","Form","Button","withRouter","React","useState","CreateCourse","props","studentNumber","screen","console","log","course","setCourse","_id","courseCode","courseName","section","semester","showLoading","setShowLoading","apiUrl","validated","setValidated","saveCourse","e","preventDefault","data","form","currentTarget","checkValidity","stopPropagation","post","then","result","history","push","catch","error","onChange","persist","target","name","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\nimport React, { useState } from 'react';\n\n//\nfunction CreateCourse(props) {\n    //\n    const studentNumber = props.screen;\n    console.log('props.screen',props.screen)\n    const [course, setCourse] = useState(\n        { _id: '',\n         courseCode: '',\n         courseName: '',\n         section: '',\n         semester: '',\n         studentNumber: '' });\n\n    const [showLoading, setShowLoading] = useState(false);\n    //\n    const apiUrl = \"http://localhost:3000/api/courses\"\n    //\n    const [validated, setValidated] = useState(false);\n    //\n    const saveCourse = (e) => {\n        setShowLoading(true);\n        e.preventDefault();\n        const data = {\n            courseCode: course.courseCode,\n            courseName: course.courseName,\n            section: course.section,\n            semester: course.semester,\n            studentNumber: studentNumber };\n        //\n        const form = e.currentTarget;\n        if (form.checkValidity() === false) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n    \n        setValidated(true);\n        axios.post(apiUrl, data)\n        .then((result) => {\n            setShowLoading(false);\n            console.log('results from save course:',result.data)\n            props.history.push('/showCourse/' + result.data._id)\n\n        }).catch((error) => setShowLoading(false));\n    };\n    //\n    const onChange = (e) => {\n        e.persist();\n        setCourse({...course, [e.target.name]: e.target.value});\n      }\n    \n    return (\n        <div>\n        <h2> Create an course for {studentNumber} </h2>\n        {showLoading && \n            <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n            </Spinner> \n        } \n        <Jumbotron>\n            <Form noValidate validated={validated} onSubmit={saveCourse}>\n              <Form.Group>\n                <Form.Label> Course Code</Form.Label>\n                <Form.Control  required type=\"text\" name=\"courseCode\" id=\"courseCode\" placeholder=\"Enter Course Code\" value={course.courseCode} onChange={onChange} />\n                <Form.Control.Feedback type=\"invalid\">\n              Please provide correct course code.\n            </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label> Course Name</Form.Label>\n                <Form.Control required type=\"text\" name=\"courseName\" id=\"courseName\" placeholder=\"Enter Course Name\" value={course.courseName} onChange={onChange} />\n                <Form.Control.Feedback type=\"invalid\">\n                Please provide course name.\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label> Section</Form.Label>\n                <Form.Control required type=\"text\" name=\"section\" id=\"section\" placeholder=\"Enter section\" value={course.section} onChange={onChange} />\n                <Form.Control.Feedback type=\"invalid\">\n                Please provide section.\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label> Semester</Form.Label>\n                <Form.Control required  type=\"text\" name=\"semester\" id=\"semester\" placeholder=\"Enter semester\" value={course.semester} onChange={onChange} />\n                <Form.Control.Feedback type=\"invalid\">\n                Please provide semester.\n                </Form.Control.Feedback>\n              </Form.Group>\n                            \n              <Button variant=\"primary\" type=\"submit\">\n                Save Course\n              </Button>\n            </Form>\n          </Jumbotron>\n        </div>\n    );\n\n\n}\n\nexport default withRouter(CreateCourse);\n"]},"metadata":{},"sourceType":"module"}