{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/Student-Course-WebApp-Client/src/components/Login.js\";\nimport React, { useState, useEffect } from 'react'; //import ReactDOM from 'react-dom';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'; //\n\nimport View from './View'; //\n\nfunction Login() {\n  //state variable for the screen, admin or user\n  const [screen, setScreen] = useState('auth'); //store input field data, student number and password\n\n  const [studentNumber, setStudentNumber] = useState();\n  const [password, setPassword] = useState();\n  const apiUrl = \"http://localhost:3000/signin\"; //send studentNumber and password to the server\n  // for initial authentication\n\n  const auth = async () => {\n    console.log('calling auth');\n    console.log(studentNumber);\n\n    try {\n      //make a get request to /authenticate end-point on the server\n      const loginData = {\n        auth: {\n          studentNumber,\n          password\n        }\n      }; //call api\n\n      const res = await axios.post(apiUrl, loginData);\n      console.log(res.data.auth);\n      console.log(res.data.screen); //process the response\n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) {\n      //print the error\n      console.log(e);\n    }\n  }; //check if the user already logged-in\n\n\n  const readCookie = async () => {\n    try {\n      //\n      console.log('--- in readCookie function ---');\n      const res = await axios.get('/read_cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  }; //runs the first time the view is rendered\n  //to check if user is signed in\n\n\n  useEffect(() => {\n    readCookie();\n  }, []);\n\n  const register = () => {\n    props.history.push({\n      pathname: '/createStudent'\n    });\n  }; //\n\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \" Kyungjin and Yeseul Lab3 \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"React front-end calls Express REST API to add, list, update, or delete a user\"), screen === 'auth' ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Student Number: \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setStudentNumber(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Password: \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: auth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"button\", {\n    onClick: () => {\n      register();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Regester\")) : React.createElement(View, {\n    screen: screen,\n    setScreen: setScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/kyungjin/Student-Course-WebApp-Client/src/components/Login.js"],"names":["React","useState","useEffect","Jumbotron","Form","Button","axios","View","Login","screen","setScreen","studentNumber","setStudentNumber","password","setPassword","apiUrl","auth","console","log","loginData","res","post","data","undefined","e","readCookie","get","register","props","history","push","pathname","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n//import ReactDOM from 'react-dom';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n//\nimport View from './View'\n//\nfunction Login() {\n  //state variable for the screen, admin or user\n  const [screen, setScreen] = useState('auth');\n  //store input field data, student number and password\n  const [studentNumber, setStudentNumber] = useState();\n  const [password, setPassword] = useState();\n  const apiUrl = \"http://localhost:3000/signin\";\n\n  //send studentNumber and password to the server\n  // for initial authentication\n  const auth = async () => {\n    console.log('calling auth')\n    console.log(studentNumber)\n\n    try {\n      //make a get request to /authenticate end-point on the server\n      const loginData = { auth: { studentNumber, password } }\n      //call api\n      const res = await axios.post(apiUrl, loginData);\n      console.log(res.data.auth)\n      console.log(res.data.screen)\n      //process the response\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) { //print the error\n      console.log(e);\n    }\n\n  };\n\n  //check if the user already logged-in\n  const readCookie = async () => {\n    try {\n      //\n      console.log('--- in readCookie function ---');\n      const res = await axios.get('/read_cookie');\n      // \n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  };\n  //runs the first time the view is rendered\n  //to check if user is signed in\n  useEffect(() => {\n    readCookie();\n  }, []);\n  \n  const register = () => {\n    props.history.push({\n      pathname: '/createStudent'\n    });\n  }\n\n  //\n  return (\n    <div className=\"App\">\n\n      <h2> Kyungjin and Yeseul Lab3 </h2>\n      <p>React front-end calls Express REST API to add, list, update, or delete a user</p>\n\n      {screen === 'auth'\n        ? <div>\n          <label>Student Number: </label>\n          <br />\n          <input type=\"text\" onChange={e => setStudentNumber(e.target.value)} />\n          <br />\n          <label>Password: </label>\n          <br />\n          <input type=\"password\" onChange={e => setPassword(e.target.value)} />\n          <br />\n          <button onClick={auth}>Login</button>\n          <button onClick={() => { register() }}>Regester</button>\n        </div>\n        : <View screen={screen} setScreen={setScreen} />\n      }\n    </div>\n  );\n}\n\nexport default Login;\n\n"]},"metadata":{},"sourceType":"module"}