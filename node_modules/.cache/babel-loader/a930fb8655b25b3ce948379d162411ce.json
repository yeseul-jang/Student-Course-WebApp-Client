{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/Student-Course-WebApp-Client/src/components/CreateStudent.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction CreateStudent(props) {\n  const [student, setStudent] = useState({\n    _id: '',\n    studentNumber: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    city: '',\n    phoneNumber: '',\n    email: '',\n    program: ''\n  });\n  const [showLoading, setShowLoading] = useState(false);\n  const apiUrl = \"http://localhost:3000/\";\n  const [validated, setValidated] = useState(false);\n\n  const saveUser = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      studentNumber: student.studentNumber,\n      password: student.password,\n      firstName: student.firstName,\n      lastName: student.lastName,\n      address: student.address,\n      city: student.city,\n      phoneNumber: student.phoneNumber,\n      email: student.email,\n      program: student.program\n    };\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidated(true);\n    axios.post(apiUrl, data).then(result => {\n      setShowLoading(false);\n      props.history.push('/showStudent/' + result.data._id);\n    }).catch(error => setShowLoading(false));\n  };\n\n  const onChange = e => {\n    e.persist();\n    setStudent({ ...student,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Loading...\")), React.createElement(Jumbotron, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: saveUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \" Student Number \"), React.createElement(Form.Control, {\n    required: true,\n    type: \"number\",\n    name: \"studentNumber\",\n    id: \"studentNumber\",\n    placeholder: \"Enter Student Number\",\n    value: student.studentNumber,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Please provide student number.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \" Password \"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Enter the password\",\n    value: student.password,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Please provide password.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \" First Name\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    placeholder: \"Enter first name\",\n    value: student.firstName,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Please provide first name.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \" Last Name \"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"lastName\",\n    id: \"lastName\",\n    placeholder: \"Enter last name\",\n    value: student.lastName,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Please provide last name.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \" Address \"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"address\",\n    id: \"address\",\n    placeholder: \"Enter the address\",\n    value: student.address,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Please fill a valid email addres.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \" City \"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"city\",\n    id: \"city\",\n    placeholder: \"Enter the city\",\n    value: student.city,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Please provide city.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \" Phone Number \"), React.createElement(Form.Control, {\n    required: true,\n    type: \"number\",\n    name: \"phoneNumber\",\n    id: \"phoneNumber\",\n    placeholder: \"Enter the phone number\",\n    value: student.phoneNumber,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Please provide phone number.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    rows: \"3\",\n    placeholder: \"Enter email\",\n    value: student.email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Please provide email addreess.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \" Program \"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"program\",\n    id: \"program\",\n    placeholder: \"Enter the program\",\n    value: student.program,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Please provide program.\")), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Save\"))));\n}\n\nexport default withRouter(CreateStudent);","map":{"version":3,"sources":["/Users/kyungjin/Student-Course-WebApp-Client/src/components/CreateStudent.js"],"names":["React","useState","useEffect","axios","Spinner","Jumbotron","Form","Button","withRouter","CreateStudent","props","student","setStudent","_id","studentNumber","password","firstName","lastName","address","city","phoneNumber","email","program","showLoading","setShowLoading","apiUrl","validated","setValidated","saveUser","e","preventDefault","data","form","currentTarget","checkValidity","stopPropagation","post","then","result","history","push","catch","error","onChange","persist","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction CreateStudent(props) {\n  const [student, setStudent] \n  = useState({ \n      _id: '',\n      studentNumber: '',\n      password:'',\n      firstName:'',\n      lastName:'',\n      address:'',\n      city:'',\n      phoneNumber:'',\n      email:'',\n      program:''\n    \n    });\n  const [showLoading, setShowLoading] = useState(false);\n  const apiUrl = \"http://localhost:3000/\";\n  const [validated, setValidated] = useState(false);\n\n  const saveUser = (e) => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = { \n        studentNumber: student.studentNumber,\n        password: student.password,\n        firstName: student.firstName,\n        lastName: student.lastName,\n        address: student.address,\n        city: student.city,\n        phoneNumber: student.phoneNumber,\n        email: student.email,\n        program:student.program\n        \n    };\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidated(true);\n\n    axios.post(apiUrl, data)\n      .then((result) => {\n        setShowLoading(false);\n        props.history.push('/showStudent/' + result.data._id)\n      }).catch((error) => setShowLoading(false));\n  };\n\n  const onChange = (e) => {\n    e.persist();\n    setStudent({...student, [e.target.name]: e.target.value});\n  }\n\n  return (\n    <div>\n      {showLoading && \n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner> \n      } \n      <Jumbotron>\n        <Form noValidate validated={validated} onSubmit={saveUser}>\n\n          <Form.Group  >\n            <Form.Label> Student Number </Form.Label>\n            <Form.Control required type=\"number\" name=\"studentNumber\" id=\"studentNumber\" placeholder=\"Enter Student Number\" value={student.studentNumber} onChange={onChange} />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide student number.\n            </Form.Control.Feedback>\n          </Form.Group>\n       \n          <Form.Group >\n            <Form.Label> Password </Form.Label>\n            <Form.Control required type=\"text\" name=\"password\" id=\"password\" placeholder=\"Enter the password\" value={student.password} onChange={onChange} />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide password.\n            </Form.Control.Feedback>\n          </Form.Group>\n       \n       \n          <Form.Group>\n            <Form.Label> First Name</Form.Label>\n            <Form.Control required type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"Enter first name\" value={student.firstName} onChange={onChange} />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide first name.\n            </Form.Control.Feedback>\n          </Form.Group>\n       \n          <Form.Group>\n            <Form.Label> Last Name </Form.Label>\n            <Form.Control required type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Enter last name\" value={student.lastName} onChange={onChange} />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide last name.\n            </Form.Control.Feedback>\n          </Form.Group>\n       \n          <Form.Group>\n            <Form.Label> Address </Form.Label>\n            <Form.Control required type=\"text\" name=\"address\" id=\"address\" placeholder=\"Enter the address\" value={student.address} onChange={onChange} />\n            <Form.Control.Feedback type=\"invalid\">\n             Please fill a valid email addres.\n            </Form.Control.Feedback>\n          </Form.Group>\n       \n          <Form.Group>\n            <Form.Label> City </Form.Label>\n            <Form.Control required type=\"text\" name=\"city\" id=\"city\" placeholder=\"Enter the city\" value={student.city} onChange={onChange} />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide city.\n            </Form.Control.Feedback>\n          </Form.Group>\n       \n          <Form.Group>\n            <Form.Label> Phone Number </Form.Label>\n            <Form.Control required type=\"number\" name=\"phoneNumber\" id=\"phoneNumber\" placeholder=\"Enter the phone number\" value={student.phoneNumber} onChange={onChange} />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide phone number.\n            </Form.Control.Feedback>\n          </Form.Group>\n       \n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control required type=\"text\" name=\"email\" id=\"email\" rows=\"3\" placeholder=\"Enter email\" value={student.email} onChange={onChange} />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide email addreess.\n            </Form.Control.Feedback>\n          </Form.Group>\n       \n          <Form.Group>\n            <Form.Label> Program </Form.Label>\n            <Form.Control required type=\"text\" name=\"program\" id=\"program\" placeholder=\"Enter the program\" value={student.program} onChange={onChange} />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide program.\n            </Form.Control.Feedback>\n          </Form.Group>\n       \n          <Button variant=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </Form>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default withRouter(CreateStudent);\n"]},"metadata":{},"sourceType":"module"}