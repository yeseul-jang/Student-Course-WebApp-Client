{"ast":null,"code":"var _jsxFileName = \"/Users/yeseul/workspace/Yeseul_Kyungjin_Lab3_Client/src/components/Create.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction Create(props) {\n  const [user, setUser] = useState({\n    _id: '',\n    firstName: '',\n    email: '',\n    password: ''\n  });\n  const [showLoading, setShowLoading] = useState(false);\n  const apiUrl = \"http://localhost:3000/\";\n\n  const saveUser = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      firstName: user.firstName,\n      email: user.email,\n      password: user.password\n    };\n    axios.post(apiUrl, data).then(result => {\n      setShowLoading(false);\n      props.history.push('/show/' + result.data._id);\n    }).catch(error => setShowLoading(false));\n  };\n\n  const onChange = e => {\n    e.persist();\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Loading...\")), React.createElement(Jumbotron, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: saveUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" First Name\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"firstName\",\n    id: \"firstName\",\n    placeholder: \"Enter first name\",\n    value: user.firstName,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    rows: \"3\",\n    placeholder: \"Enter email\",\n    value: user.email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Enter password\",\n    value: user.password,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Save\"))));\n}\n\nexport default withRouter(Create);","map":{"version":3,"sources":["/Users/yeseul/workspace/Yeseul_Kyungjin_Lab3_Client/src/components/Create.js"],"names":["React","useState","useEffect","axios","Spinner","Jumbotron","Form","Button","withRouter","Create","props","user","setUser","_id","firstName","email","password","showLoading","setShowLoading","apiUrl","saveUser","e","preventDefault","data","post","then","result","history","push","catch","error","onChange","persist","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction Create(props) {\n  const [user, setUser] = useState({ _id: '', firstName: '',\n                email: '',password: '' });\n  const [showLoading, setShowLoading] = useState(false);\n  const apiUrl = \"http://localhost:3000/\";\n\n  const saveUser = (e) => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = { firstName: user.firstName,\n      email: user.email,password: user.password };\n    axios.post(apiUrl, data)\n      .then((result) => {\n        setShowLoading(false);\n        props.history.push('/show/' + result.data._id)\n      }).catch((error) => setShowLoading(false));\n  };\n\n  const onChange = (e) => {\n    e.persist();\n    setUser({...user, [e.target.name]: e.target.value});\n  }\n\n  return (\n    <div>\n      {showLoading && \n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner> \n      } \n      <Jumbotron>\n        <Form onSubmit={saveUser}>\n          <Form.Group>\n            <Form.Label> First Name</Form.Label>\n            <Form.Control type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"Enter first name\" value={user.firstName} onChange={onChange} />\n          </Form.Group>\n       \n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control type=\"text\" name=\"email\" id=\"email\" rows=\"3\" placeholder=\"Enter email\" value={user.email} onChange={onChange} />\n          </Form.Group>\n       \n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"text\" name=\"password\" id=\"password\" placeholder=\"Enter password\" value={user.password} onChange={onChange} />\n          </Form.Group>\n          \n          <Button variant=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </Form>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default withRouter(Create);\n"]},"metadata":{},"sourceType":"module"}