{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/Student-Course-WebApp-Client/src/components/ShowStudent.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport { withRouter } from 'react-router-dom';\n\nfunction ShowStudent(props) {\n  console.log('props.match.params', props.match.params.id);\n  const [data, setData] = useState({});\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/students/\" + props.match.params.id;\n  const apiStudentCourseListUrl = \"http://localhost:3000/api/studentCourses/\" + props.match.params.id;\n  const [courseData, setCourseData] = useState([]);\n  useEffect(() => {\n    setShowLoading(false);\n\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      console.log('results from students', result.data);\n      setData(result.data);\n      const resultCourseList = await axios(apiStudentCourseListUrl);\n      console.log('results from courseList', resultCourseList.data);\n      setCourseData(resultCourseList.data);\n      setShowLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const editStudent = id => {\n    props.history.push({\n      pathname: '/editStudnet/' + id\n    });\n  };\n\n  const deleteStudent = id => {\n    setShowLoading(true);\n    const student = {\n      studentNumber: data.studentNumber,\n      password: data.password,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      address: data.address,\n      city: data.city,\n      phoneNumber: data.phoneNumber,\n      email: data.email,\n      program: data.program\n    };\n    axios.delete(apiUrl, student).then(result => {\n      setShowLoading(false);\n      props.history.push('/list');\n    }).catch(error => setShowLoading(false));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"StudentList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Loading...\")), React.createElement(Jumbotron, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, data.studentNumber, \" \", data.firstName, \" \", data.lastName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, data.email), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \" Your password is stored the encrypted password for the following:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, data.password), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, data.address, \" \", data.city), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, data.phoneNumber), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, data.program), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"button\",\n    variant: \"primary\",\n    onClick: () => {\n      editStudent(data._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Edit\"), \"\\xA0\", React.createElement(Button, {\n    type: \"button\",\n    variant: \"danger\",\n    onClick: () => {\n      deleteStudent(data._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Delete\"))), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"List of Courses\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Table, {\n    responsive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Code\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Section\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Semester\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, courseData.map((item, idx) => React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, item.courseCode), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, item.courseName), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, item.section), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, item.semester))))));\n}\n\nexport default withRouter(ShowStudent);","map":{"version":3,"sources":["/Users/kyungjin/Student-Course-WebApp-Client/src/components/ShowStudent.js"],"names":["React","useState","useEffect","axios","Spinner","Jumbotron","Button","Table","withRouter","ShowStudent","props","console","log","match","params","id","data","setData","showLoading","setShowLoading","apiUrl","apiStudentCourseListUrl","courseData","setCourseData","fetchData","result","resultCourseList","editStudent","history","push","pathname","deleteStudent","student","studentNumber","password","firstName","lastName","address","city","phoneNumber","email","program","delete","then","catch","error","_id","map","item","idx","courseCode","courseName","section","semester"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport { withRouter } from 'react-router-dom';\n\nfunction ShowStudent(props) {\n    console.log('props.match.params', props.match.params.id)\n    const [data, setData] = useState({});\n    const [showLoading, setShowLoading] = useState(true);\n    const apiUrl = \"http://localhost:3000/students/\" + props.match.params.id;\n    const apiStudentCourseListUrl = \"http://localhost:3000/api/studentCourses/\" + props.match.params.id;\n    const [courseData, setCourseData] = useState([]);\n\n    useEffect(() => {\n        setShowLoading(false);\n        const fetchData = async () => {\n            const result = await axios(apiUrl);\n            console.log('results from students', result.data);\n            setData(result.data);\n\n            const resultCourseList = await axios(apiStudentCourseListUrl);\n            console.log('results from courseList', resultCourseList.data);\n            setCourseData(resultCourseList.data);\n\n            setShowLoading(false);\n        };\n\n        fetchData();\n    }, []);\n\n    const editStudent = (id) => {\n        props.history.push({\n            pathname: '/editStudnet/' + id\n        });\n    };\n\n    const deleteStudent = (id) => {\n        setShowLoading(true);\n        const student = {\n            studentNumber: data.studentNumber,\n            password: data.password,\n            firstName: data.firstName,\n            lastName: data.lastName,\n            address: data.address,\n            city: data.city,\n            phoneNumber: data.phoneNumber,\n            email: data.email,\n            program: data.program\n        };\n\n        axios.delete(apiUrl, student)\n            .then((result) => {\n                setShowLoading(false);\n                props.history.push('/list')\n            }).catch((error) => setShowLoading(false));\n    };\n    return (\n        <div className=\"StudentList\">\n            {showLoading && <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>}\n            <Jumbotron>\n                <h1>{data.studentNumber} {data.firstName} {data.lastName}</h1>\n                <p>{data.email}</p>\n                <p> Your password is stored the encrypted password for the following:</p>\n                <p>{data.password}</p>\n\n                <p>{data.address} {data.city}</p>\n                <p>{data.phoneNumber}</p>\n                <p>{data.program}</p>\n                <p>\n                    <Button type=\"button\" variant=\"primary\" onClick={() => { editStudent(data._id) }}>Edit</Button>&nbsp;\n                    <Button type=\"button\" variant=\"danger\" onClick={() => { deleteStudent(data._id) }}>Delete</Button>\n                </p>\n            </Jumbotron>\n\n            <h2>List of Courses</h2><br />\n\n            <Table responsive>\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Code</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Section</th>\n                        <th scope=\"col\">Semester</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {courseData.map((item, idx) => (\n                        <tr>\n                            <td>{item.courseCode}</td>\n                            <td>{item.courseName}</td>\n                            <td>{item.section}</td>\n                            <td>{item.semester}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n\n        </div>\n    );\n}\nexport default withRouter(ShowStudent);\n"]},"metadata":{},"sourceType":"module"}