{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/Student-Course-WebApp-Client/src/components/EditCourse.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction EditCourse(props) {\n  console.log('editCourse props:', props.match.params);\n  console.log('editCourse props1111:', props.match.params.id);\n  const [course, setCourse] = useState({\n    _id: '',\n    courseCode: '',\n    courseName: '',\n    section: '',\n    semester: '',\n    studentNumber: ''\n  });\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/api/courses/\" + props.match.params.id; //runs only once after the first render\n\n  useEffect(() => {\n    setShowLoading(false); //call api\n\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      setCourse(result.data);\n      console.log(result.data);\n      setShowLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const updateCourse = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      courseCode: course.courseCode,\n      courseName: course.courseName,\n      section: course.section,\n      semester: course.semester,\n      studentNumber: course.studentNumber\n    };\n    console.log(\">>>>>>>>>> \", apiUrl);\n    axios.put(apiUrl, data).then(result => {\n      console.log('after calling put to update', result.data);\n      setShowLoading(false);\n      props.history.push('/showCourse/' + result.data._id);\n    }).catch(error => setShowLoading(false));\n  }; //runs when user enters a field\n\n\n  const onChange = e => {\n    e.persist();\n    setCourse({ ...course,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Loading...\")), React.createElement(Jumbotron, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: updateCourse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \" Course Code\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"courseCode\",\n    id: \"courseCode\",\n    placeholder: \"Enter Course Code\",\n    value: course.courseCode,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" Course Name\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"courseName\",\n    id: \"courseName\",\n    placeholder: \"Enter Course Name\",\n    value: course.courseName,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \" Section\"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"section\",\n    id: \"section\",\n    placeholder: \"Enter section\",\n    value: course.section,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \" Semester \"), React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"semester\",\n    id: \"semester\",\n    placeholder: \"Enter semester\",\n    value: course.semester,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Update Course\"))));\n}\n\nexport default withRouter(EditCourse);","map":{"version":3,"sources":["/Users/kyungjin/Student-Course-WebApp-Client/src/components/EditCourse.js"],"names":["React","useState","useEffect","axios","Spinner","Jumbotron","Form","Button","withRouter","EditCourse","props","console","log","match","params","id","course","setCourse","_id","courseCode","courseName","section","semester","studentNumber","showLoading","setShowLoading","apiUrl","fetchData","result","data","updateCourse","e","preventDefault","put","then","history","push","catch","error","onChange","persist","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction EditCourse(props) {\n  console.log('editCourse props:',props.match.params)\n  console.log('editCourse props1111:',props.match.params.id)\n  const [course, setCourse] = useState(\n    { _id: '',\n     courseCode: '',\n     courseName: '',\n     section: '',\n     semester: '',\n    studentNumber:'' }); \n\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/api/courses/\" + props.match.params.id;\n  //runs only once after the first render\n  useEffect(() => {\n    setShowLoading(false);\n    //call api\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      setCourse(result.data);\n      console.log(result.data);\n      setShowLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const updateCourse = (e) => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n        courseCode: course.courseCode,\n        courseName: course.courseName,\n        section: course.section,\n        semester: course.semester,\n        studentNumber: course.studentNumber\n    };\n\n    console.log(\">>>>>>>>>> \", apiUrl);\n\n    axios.put(apiUrl, data)\n      .then((result) => {\n        console.log('after calling put to update',result.data )\n        setShowLoading(false);\n        props.history.push('/showCourse/' + result.data._id)\n      }).catch((error) => setShowLoading(false));\n  };\n  //runs when user enters a field\n  const onChange = (e) => {\n    e.persist();\n    setCourse({...course, [e.target.name]: e.target.value});\n  }\n\n  return (\n    <div>\n      {showLoading && \n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner> \n      } \n      <Jumbotron>\n        <Form onSubmit={updateCourse}>\n        <Form.Group>\n                <Form.Label> Course Code</Form.Label>\n                <Form.Control type=\"text\" name=\"courseCode\" id=\"courseCode\" placeholder=\"Enter Course Code\" value={course.courseCode} onChange={onChange} />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label> Course Name</Form.Label>\n                <Form.Control type=\"text\" name=\"courseName\" id=\"courseName\" placeholder=\"Enter Course Name\" value={course.courseName} onChange={onChange} />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label> Section</Form.Label>\n                <Form.Control type=\"text\" name=\"section\" id=\"section\" placeholder=\"Enter section\" value={course.section} onChange={onChange} />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label> Semester </Form.Label>\n                <Form.Control type=\"text\" name=\"semester\" id=\"semester\" placeholder=\"Enter semester\" value={course.semester} onChange={onChange} />\n              </Form.Group>\n          \n          \n        \n          <Button variant=\"primary\" type=\"submit\">\n            Update Course\n          </Button>\n        </Form>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default withRouter(EditCourse);\n"]},"metadata":{},"sourceType":"module"}