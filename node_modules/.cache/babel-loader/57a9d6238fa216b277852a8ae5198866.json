{"ast":null,"code":"var _jsxFileName = \"/Users/yeseul/workspace/Yeseul_Kyungjin_Lab3_Client/src/components/Login.js\";\nimport React, { useState, useEffect } from 'react'; //import ReactDOM from 'react-dom';\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'; //\n\nimport View from './View'; //\n\nfunction App() {\n  //state variable for the screen, admin or user\n  const [screen, setScreen] = useState('auth'); //store input field data, user name and password\n\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const apiUrl = \"http://localhost:3000/signin\"; //send username and password to the server\n  // for initial authentication\n\n  const auth = async () => {\n    console.log('calling auth');\n    console.log(username);\n\n    try {\n      //make a get request to /authenticate end-point on the server\n      const loginData = {\n        auth: {\n          username,\n          password\n        }\n      }; //call api\n\n      const res = await axios.post(apiUrl, loginData);\n      console.log(res.data.auth);\n      console.log(res.data.screen); //process the response\n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) {\n      //print the error\n      console.log(e);\n    }\n  }; //check if the user already logged-in\n\n\n  const readCookie = async () => {\n    try {\n      //\n      const res = await axios.get('/read-cookie'); // \n\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console(res.data.screen);\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  }; //runs the first time the view is rendered\n  //to check if user is signed in\n\n\n  useEffect(() => {\n    readCookie();\n  }, []); //\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, screen === 'auth' ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Username: \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setUsername(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Password: \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: auth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Login\")) : React.createElement(View, {\n    screen: screen,\n    setScreen: setScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yeseul/workspace/Yeseul_Kyungjin_Lab3_Client/src/components/Login.js"],"names":["React","useState","useEffect","Jumbotron","Form","Button","axios","View","App","screen","setScreen","username","setUsername","password","setPassword","apiUrl","auth","console","log","loginData","res","post","data","undefined","e","readCookie","get","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n//import ReactDOM from 'react-dom';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n//\nimport View from './View'\n//\nfunction App() {\n  //state variable for the screen, admin or user\n  const [screen, setScreen] = useState('auth');\n  //store input field data, user name and password\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const apiUrl = \"http://localhost:3000/signin\";\n  //send username and password to the server\n  // for initial authentication\n  const auth = async () => {\n    console.log('calling auth')\n    console.log(username)\n    try {\n      //make a get request to /authenticate end-point on the server\n      const loginData = { auth: { username, password } }\n      //call api\n      const res = await axios.post(apiUrl, loginData);\n      console.log(res.data.auth)\n      console.log(res.data.screen)\n      //process the response\n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console.log(res.data.screen);\n      }\n    } catch (e) { //print the error\n      console.log(e);\n    }\n  \n  };\n  \n  //check if the user already logged-in\n  const readCookie = async () => {\n    try {\n      //\n      const res = await axios.get('/read-cookie');\n      // \n      if (res.data.screen !== undefined) {\n        setScreen(res.data.screen);\n        console(res.data.screen)\n      }\n    } catch (e) {\n      setScreen('auth');\n      console.log(e);\n    }\n  };\n  //runs the first time the view is rendered\n  //to check if user is signed in\n  useEffect(() => {\n    readCookie();\n  }, []);\n  //\n  return (\n    <div className=\"App\">\n      {screen === 'auth' \n        ? <div>\n          <label>Username: </label>\n          <br/>\n          <input type=\"text\" onChange={e => setUsername(e.target.value)} />\n          <br/>\n          <label>Password: </label>\n          <br/>\n          <input type=\"password\" onChange={e => setPassword(e.target.value)} />\n          <br/>\n          <button onClick={auth}>Login</button>\n        </div>\n        : <View screen={screen} setScreen={setScreen} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}