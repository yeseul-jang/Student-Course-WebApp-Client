{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/Student-Course-WebApp-Client/src/components/ShowStudent.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction ShowStudent(props) {\n  console.log('props.match.params', props.match.params.id);\n  const [data, setData] = useState({});\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/students/\" + props.match.params.id;\n  useEffect(() => {\n    setShowLoading(false);\n\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      console.log('results from student', result.data);\n      console.log('results from student', result.data);\n      setData(result.data);\n      console.log(result.data.firstName);\n      setShowLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const editUser = id => {\n    props.history.push({\n      pathname: '/edit/' + id\n    });\n  };\n\n  const deleteUser = id => {\n    setShowLoading(true);\n    const user = {\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      username: data.username,\n      password: data.password\n    };\n    axios.delete(apiUrl, user).then(result => {\n      setShowLoading(false);\n      props.history.push('/list');\n    }).catch(error => setShowLoading(false));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Loading...\")), React.createElement(Jumbotron, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, data.firstName, \" \", data.lastName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, data.email), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" Your password is stored the encrypted password for the following:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, data.password), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"button\",\n    variant: \"primary\",\n    onClick: () => {\n      editUser(data._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Edit\"), \"\\xA0\", React.createElement(Button, {\n    type: \"button\",\n    variant: \"danger\",\n    onClick: () => {\n      deleteUser(data._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Delete\"))));\n}\n\nexport default withRouter(ShowStudent);","map":{"version":3,"sources":["/Users/kyungjin/Student-Course-WebApp-Client/src/components/ShowStudent.js"],"names":["React","useState","useEffect","axios","Spinner","Jumbotron","Button","withRouter","ShowStudent","props","console","log","match","params","id","data","setData","showLoading","setShowLoading","apiUrl","fetchData","result","firstName","editUser","history","push","pathname","deleteUser","user","lastName","email","username","password","delete","then","catch","error","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAApD;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAMkB,MAAM,GAAG,oCAAoCV,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAAtE;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,cAAc,CAAC,KAAD,CAAd;;AACA,UAAME,SAAS,GAAG,YAAY;AAC1B,YAAMC,MAAM,GAAG,MAAMlB,KAAK,CAACgB,MAAD,CAA1B;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCU,MAAM,CAACN,IAA1C;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCU,MAAM,CAACN,IAA1C;AAEAC,MAAAA,OAAO,CAACK,MAAM,CAACN,IAAR,CAAP;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYU,MAAM,CAACN,IAAP,CAAYO,SAAxB;AACAJ,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH,KARD;;AAUAE,IAAAA,SAAS;AACZ,GAbQ,EAaN,EAbM,CAAT;;AAeF,QAAMG,QAAQ,GAAIT,EAAD,IAAQ;AACvBL,IAAAA,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB;AACjBC,MAAAA,QAAQ,EAAE,WAAWZ;AADJ,KAAnB;AAGD,GAJD;;AAMA,QAAMa,UAAU,GAAIb,EAAD,IAAQ;AACzBI,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,UAAMU,IAAI,GAAG;AAAEN,MAAAA,SAAS,EAAEP,IAAI,CAACO,SAAlB;AAA6BO,MAAAA,QAAQ,EAAEd,IAAI,CAACc,QAA5C;AACXC,MAAAA,KAAK,EAAEf,IAAI,CAACe,KADD;AACOC,MAAAA,QAAQ,EAAEhB,IAAI,CAACgB,QADtB;AACgCC,MAAAA,QAAQ,EAAEjB,IAAI,CAACiB;AAD/C,KAAb;AAGA7B,IAAAA,KAAK,CAAC8B,MAAN,CAAad,MAAb,EAAqBS,IAArB,EACGM,IADH,CACSb,MAAD,IAAY;AAChBH,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAT,MAAAA,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB,OAAnB;AACD,KAJH,EAIKU,KAJL,CAIYC,KAAD,IAAWlB,cAAc,CAAC,KAAD,CAJpC;AAKD,GAVD;;AAYE,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,WAAW,IAAI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACZ;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADY,CADpB,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACO,SAAV,OAAsBP,IAAI,CAACc,QAA3B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAId,IAAI,CAACe,KAAT,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIf,IAAI,CAACiB,QAAT,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,SAA9B;AAAwC,IAAA,OAAO,EAAE,MAAM;AAAET,MAAAA,QAAQ,CAACR,IAAI,CAACsB,GAAN,CAAR;AAAoB,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,UAEA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,QAA9B;AAAuC,IAAA,OAAO,EAAE,MAAM;AAAEV,MAAAA,UAAU,CAACZ,IAAI,CAACsB,GAAN,CAAV;AAAsB,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,CALJ,CAJJ,CADJ;AAkBH;;AACD,eAAe9B,UAAU,CAACC,WAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction ShowStudent(props) {\n    console.log('props.match.params',props.match.params.id)\n    const [data, setData] = useState({});\n    const [showLoading, setShowLoading] = useState(true);\n    const apiUrl = \"http://localhost:3000/students/\" + props.match.params.id;\n\n    useEffect(() => {\n        setShowLoading(false);\n        const fetchData = async () => {\n            const result = await axios(apiUrl);\n            console.log('results from student',result.data);\n            console.log('results from student',result.data);\n\n            setData(result.data);\n            console.log(result.data.firstName);\n            setShowLoading(false);\n        };\n\n        fetchData();\n    }, []);\n\n  const editUser = (id) => {\n    props.history.push({\n      pathname: '/edit/' + id\n    });\n  };\n\n  const deleteUser = (id) => {\n    setShowLoading(true);\n    const user = { firstName: data.firstName, lastName: data.lastName, \n      email: data.email,username: data.username, password: data.password };\n  \n    axios.delete(apiUrl, user)\n      .then((result) => {\n        setShowLoading(false);\n        props.history.push('/list')\n      }).catch((error) => setShowLoading(false));\n  };\n\n    return (\n        <div>\n            {showLoading && <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>}\n            <Jumbotron>\n                <h1>{data.firstName} {data.lastName}</h1>\n                <p>{data.email}</p>\n                <p> Your password is stored the encrypted password for the following:</p>\n                <p>{data.password}</p>\n                <p>\n                <Button type=\"button\" variant=\"primary\" onClick={() => { editUser(data._id) }}>Edit</Button>&nbsp;\n                <Button type=\"button\" variant=\"danger\" onClick={() => { deleteUser(data._id) }}>Delete</Button>\n                </p>\n            </Jumbotron>\n            \n        </div>\n    );\n}\nexport default withRouter(ShowStudent);\n"]},"metadata":{},"sourceType":"module"}