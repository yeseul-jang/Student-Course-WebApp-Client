{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/Student-Course-WebApp-Client/src/components/ShowStudent.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction ShowStudent(props) {\n  console.log('props.match.params', props.match.params.id);\n  const [data, setData] = useState({});\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/students/\" + props.match.params.id;\n  useEffect(() => {\n    console.log(\"11111\");\n    setShowLoading(false);\n\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      console.log('results from students', result.data);\n      setData(result.data);\n      setShowLoading(false);\n    };\n\n    console.log(\"2222\");\n    fetchData();\n  }, []);\n\n  const editStudent = id => {\n    props.history.push({\n      pathname: '/edit/' + id\n    });\n  };\n\n  const deleteStudent = id => {\n    setShowLoading(true);\n    const data = {\n      studentNumber: student.studentNumber,\n      password: student.password,\n      firstName: student.firstName,\n      lastName: student.lastName,\n      address: student.address,\n      city: student.city,\n      phoneNumber: student.phoneNumber,\n      email: student.email,\n      program: student.program\n    };\n    axios.delete(apiUrl, user).then(result => {\n      setShowLoading(false);\n      props.history.push('/list');\n    }).catch(error => setShowLoading(false));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Loading...\")), React.createElement(Jumbotron, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, data.firstName, \" \", data.lastName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, data.email), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" Your password is stored the encrypted password for the following:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, data.password), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"button\",\n    variant: \"primary\",\n    onClick: () => {\n      editStudent(data._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Edit\"), \"\\xA0\", React.createElement(Button, {\n    type: \"button\",\n    variant: \"danger\",\n    onClick: () => {\n      deleteStudent(data._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Delete\"))));\n}\n\nexport default withRouter(ShowStudent);","map":{"version":3,"sources":["/Users/kyungjin/Student-Course-WebApp-Client/src/components/ShowStudent.js"],"names":["React","useState","useEffect","axios","Spinner","Jumbotron","Button","withRouter","ShowStudent","props","console","log","match","params","id","data","setData","showLoading","setShowLoading","apiUrl","fetchData","result","editStudent","history","push","pathname","deleteStudent","studentNumber","student","password","firstName","lastName","address","city","phoneNumber","email","program","delete","user","then","catch","error","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\n\nfunction ShowStudent(props) {\n    console.log('props.match.params',props.match.params.id)\n    const [data, setData] = useState({});\n    const [showLoading, setShowLoading] = useState(true);\n    const apiUrl = \"http://localhost:3000/students/\" + props.match.params.id;\n\n    useEffect(() => {\n        console.log(\"11111\");\n        setShowLoading(false);\n        const fetchData = async () => {\n          const result = await axios(apiUrl);\n          console.log('results from students',result.data);\n          setData(result.data);\n          setShowLoading(false);\n        };\n        console.log(\"2222\");\n    \n        fetchData();\n      }, []);\n\n  const editStudent = (id) => {\n    props.history.push({\n      pathname: '/edit/' + id\n    });\n  };\n\n  const deleteStudent = (id) => {\n    setShowLoading(true);\n    const data = { \n        studentNumber: student.studentNumber,\n        password: student.password,\n        firstName: student.firstName,\n        lastName: student.lastName,\n        address: student.address,\n        city: student.city,\n        phoneNumber: student.phoneNumber,\n        email: student.email,\n        program:student.program\n    };\n  \n    axios.delete(apiUrl, user)\n      .then((result) => {\n        setShowLoading(false);\n        props.history.push('/list')\n      }).catch((error) => setShowLoading(false));\n  };\n\n    return (\n        <div>\n            {showLoading && <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>}\n            <Jumbotron>\n                <h1>{data.firstName} {data.lastName}</h1>\n                <p>{data.email}</p>\n                <p> Your password is stored the encrypted password for the following:</p>\n                <p>{data.password}</p>\n                <p>\n                <Button type=\"button\" variant=\"primary\" onClick={() => { editStudent(data._id) }}>Edit</Button>&nbsp;\n                <Button type=\"button\" variant=\"danger\" onClick={() => { deleteStudent(data._id) }}>Delete</Button>\n                </p>\n            </Jumbotron>\n            \n        </div>\n    );\n}\nexport default withRouter(ShowStudent);\n"]},"metadata":{},"sourceType":"module"}