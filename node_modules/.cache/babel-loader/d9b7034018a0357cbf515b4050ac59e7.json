{"ast":null,"code":"var _jsxFileName = \"/Users/kyungjin/Student-Course-WebApp-Client/src/components/EditCourse.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction EditCourse(props) {\n  const [course, setCourse] = useState({\n    _id: '',\n    courseCode: '',\n    courseName: '',\n    section: '',\n    semester: '',\n    studentNumber: ''\n  });\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/api/courses/\" + props.match.params.id;\n  const [validated, setValidated] = useState(false); //runs only once after the first render\n\n  useEffect(() => {\n    setShowLoading(false); //call api\n\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      setCourse(result.data.course);\n      console.log(result.data.course);\n      setShowLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const updateCourse = e => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      courseCode: course.courseCode,\n      courseName: course.courseName,\n      section: course.section,\n      semester: course.semester,\n      studentNumber: course.studentNumber\n    };\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidated(true);\n    axios.put(apiUrl, data).then(result => {\n      console.log('after calling put to update', result.data);\n      setShowLoading(false);\n      props.history.push('/showCourse/' + props.match.params.id);\n    }).catch(error => setShowLoading(false));\n  }; //runs when user enters a field\n\n\n  const onChange = e => {\n    e.persist();\n    setCourse({ ...course,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, showLoading && React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Loading...\")), React.createElement(Jumbotron, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: updateCourse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \" Course Code\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"courseCode\",\n    id: \"courseCode\",\n    placeholder: \"Enter Course Code\",\n    value: course.courseCode,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Please provide correct course code.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \" Course Name\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"courseName\",\n    id: \"courseName\",\n    placeholder: \"Enter Course Name\",\n    value: course.courseName,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Please provide course name.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \" Section\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"section\",\n    id: \"section\",\n    placeholder: \"Enter section\",\n    value: course.section,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Please provide section.\")), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \" Semester\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    name: \"semester\",\n    id: \"semester\",\n    placeholder: \"Enter semester\",\n    value: course.semester,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Please provide semester.\")), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Update Course\"))));\n}\n\nexport default withRouter(EditCourse);","map":{"version":3,"sources":["/Users/kyungjin/Student-Course-WebApp-Client/src/components/EditCourse.js"],"names":["React","useState","useEffect","axios","Spinner","Jumbotron","Form","Button","withRouter","Alert","EditCourse","props","course","setCourse","_id","courseCode","courseName","section","semester","studentNumber","showLoading","setShowLoading","apiUrl","match","params","id","validated","setValidated","fetchData","result","data","console","log","updateCourse","e","preventDefault","form","currentTarget","checkValidity","stopPropagation","put","then","history","push","catch","error","onChange","persist","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router-dom';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction EditCourse(props) {\n  const [course, setCourse] = useState(\n    {\n      _id: '',\n      courseCode: '',\n      courseName: '',\n      section: '',\n      semester: '',\n      studentNumber: ''\n    });\n\n  const [showLoading, setShowLoading] = useState(true);\n  const apiUrl = \"http://localhost:3000/api/courses/\" + props.match.params.id;\n  const [validated, setValidated] = useState(false);\n\n  //runs only once after the first render\n  useEffect(() => {\n    setShowLoading(false);\n    //call api\n    const fetchData = async () => {\n      const result = await axios(apiUrl);\n      setCourse(result.data.course);\n      console.log(result.data.course);\n      setShowLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const updateCourse = (e) => {\n    setShowLoading(true);\n    e.preventDefault();\n    const data = {\n      courseCode: course.courseCode,\n      courseName: course.courseName,\n      section: course.section,\n      semester: course.semester,\n      studentNumber: course.studentNumber\n    };\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidated(true);\n    axios.put(apiUrl, data)\n      .then((result) => {\n        console.log('after calling put to update', result.data);\n        setShowLoading(false);\n        props.history.push('/showCourse/' + props.match.params.id)\n      }).catch((error) => setShowLoading(false));\n  };\n  //runs when user enters a field\n  const onChange = (e) => {\n    e.persist();\n    setCourse({ ...course, [e.target.name]: e.target.value });\n  }\n\n  return (\n    <div>\n      {showLoading &&\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      }\n\n      <Jumbotron>\n        <Form noValidate validated={validated} onSubmit={updateCourse}>\n          <Form.Group>\n            <Form.Label> Course Code</Form.Label>\n            <Form.Control required type=\"text\" name=\"courseCode\" id=\"courseCode\" placeholder=\"Enter Course Code\" value={course.courseCode} onChange={onChange} />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide correct course code.\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label> Course Name</Form.Label>\n            <Form.Control required type=\"text\" name=\"courseName\" id=\"courseName\" placeholder=\"Enter Course Name\" value={course.courseName} onChange={onChange} />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide course name.\n                </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label> Section</Form.Label>\n            <Form.Control required type=\"text\" name=\"section\" id=\"section\" placeholder=\"Enter section\" value={course.section} onChange={onChange} />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide section.\n                </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label> Semester</Form.Label>\n            <Form.Control required type=\"text\" name=\"semester\" id=\"semester\" placeholder=\"Enter semester\" value={course.semester} onChange={onChange} />\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide semester.\n                </Form.Control.Feedback>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Update Course\n              </Button>\n        </Form>\n\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default withRouter(EditCourse);\n"]},"metadata":{},"sourceType":"module"}